<UserControl x:Class="ZenTask.Views.KanbanView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ZenTask.Views"
             xmlns:converters="clr-namespace:ZenTask.Utils.Converters"
             xmlns:models="clr-namespace:ZenTask.Models"
             mc:Ignorable="d"
             d:DesignHeight="700"
             d:DesignWidth="1000">

    <UserControl.Resources>
        <ResourceDictionary>
            <DropShadowEffect x:Key="TaskCardNormalShadow"
                              x:Shared="False"
                              ShadowDepth="2"
                              Direction="315"
                              BlurRadius="5"
                              Opacity="0.2" />

            <DropShadowEffect x:Key="TaskCardHoverShadow"
                              x:Shared="False"
                              ShadowDepth="3"
                              Direction="315"
                              BlurRadius="8"
                              Opacity="0.3" />
            <SolidColorBrush x:Key="ColumnNormalBrush"
                             x:Shared="False"
                             Color="#272b38" />
            <SolidColorBrush x:Key="ColumnHighlightBrush"
                             x:Shared="False"
                             Color="#3F9575fa" />
            <Style x:Key="KanbanTaskCardStyle"
                   TargetType="Border">
                <Setter Property="Background"
                        Value="{DynamicResource CardBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource BorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="CornerRadius"
                        Value="6" />
                <Setter Property="Margin"
                        Value="0,0,0,10" />
                <Setter Property="Padding"
                        Value="12" />
                <Setter Property="Cursor"
                        Value="Hand" />
                <!-- Moved RenderTransform here so it's available for animations -->
                <Setter Property="RenderTransformOrigin"
                        Value="0.5,0.5" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect"
                        Value="{StaticResource TaskCardNormalShadow}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource BackgroundHoverBrush}" />
                        <Setter Property="Effect"
                                Value="{StaticResource TaskCardHoverShadow}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Action Button Style -->
            <Style x:Key="ActionButtonStyle"
                   TargetType="Button">
                <Setter Property="Background"
                        Value="{StaticResource TealBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource TextBrush}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Height"
                        Value="40" />
                <Setter Property="Padding"
                        Value="20,0" />
                <Setter Property="FontSize"
                        Value="14" />
                <Setter Property="FontWeight"
                        Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="20">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource ButtonClickAnimation}" />
                                </EventTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource GreenBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource PurpleBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="{StaticResource DisabledBrush}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource DisabledTextBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Column Highlight Animation -->
            <Storyboard x:Key="ColumnHighlightAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="0.9"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <Storyboard x:Key="ColumnNormalAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="1.0"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseIn" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <!-- Card Drag Start Animation -->
            <Storyboard x:Key="CardDragStartAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="0.6"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <!-- Use Scale transform instead of animating effect properties -->
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                 To="1.05"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                 To="1.05"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <!-- Simplified Card Drag End Animation -->
            <Storyboard x:Key="CardDragEndAnimation">
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="1"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <!-- Animate scale back to normal -->
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                 To="1"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                 To="1"
                                 Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Header with title and "Add task" button -->
        <Grid Grid.Row="0"
              Margin="10,10,10,20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Title -->
            <TextBlock Grid.Column="0"
                       Text="Kanban Board"
                       FontSize="28"
                       FontWeight="Bold"
                       Foreground="{DynamicResource TealBrush}"
                       Margin="10,5,20,10"
                       VerticalAlignment="Center" />

            <!-- Category Filter -->
            <ComboBox Grid.Column="1"
                      Width="200"
                      HorizontalAlignment="Left"
                      ItemsSource="{Binding Categories}"
                      SelectedValuePath="Id"
                      SelectedValue="{Binding FilterCategoryId}"
                      Margin="0,0,10,0">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Border Width="10"
                                    Height="10"
                                    Background="{Binding ColorHex, Converter={StaticResource StringToBrushConverter}}"
                                    CornerRadius="5"
                                    Margin="0,0,10,0"
                                    Visibility="{Binding Id, Converter={StaticResource NumberToVisibilityConverter}}" />
                            <TextBlock Text="{Binding Name}"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!-- Add Task Button -->
            <Button Grid.Column="2"
                    Content="+ Adaugă sarcină"
                    Command="{Binding CreateTaskCommand}"
                    Style="{StaticResource ActionButtonStyle}" />
        </Grid>

        <!-- Kanban Board -->
        <Grid Grid.Row="1"
              Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- ToDo Column -->
            <Border x:Name="ToDoColumn"
                    Grid.Column="0"
                    Background="{StaticResource ColumnNormalBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="8"
                    Margin="5"
                    Padding="10"
                    Tag="{x:Static models:TaskStatus.ToDo}"
                    AllowDrop="True"
                    DragEnter="Column_DragEnter"
                    DragLeave="Column_DragLeave"
                    Drop="Column_Drop">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Column Header -->
                    <StackPanel Grid.Row="0"
                                Orientation="Horizontal"
                                Margin="0,0,0,10">
                        <TextBlock Text="De Făcut"
                                   FontSize="18"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource TextBrush}" />
                        <Border Background="{DynamicResource OrangeBrush}"
                                CornerRadius="10"
                                Padding="6,2"
                                Margin="10,0,0,0">
                            <TextBlock Text="{Binding TodoCount}"
                                       Foreground="White"
                                       FontSize="14"
                                       Margin="5,2" />
                        </Border>
                    </StackPanel>

                    <!-- Tasks List -->
                    <ScrollViewer Grid.Row="1"
                                  VerticalScrollBarVisibility="Auto"
                                  Style="{StaticResource ZenTaskScrollViewerStyle}">
                        <ItemsControl ItemsSource="{Binding TodoTasks}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{StaticResource KanbanTaskCardStyle}"
                                            PreviewMouseLeftButtonDown="TaskCard_PreviewMouseLeftButtonDown"
                                            MouseMove="TaskCard_MouseMove"
                                            PreviewMouseLeftButtonUp="TaskCard_PreviewMouseLeftButtonUp"
                                            Tag="{Binding Id}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Title with Priority Indicator -->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Grid.Column="0"
                                                           Text="{Binding Title}"
                                                           FontWeight="SemiBold"
                                                           TextWrapping="Wrap" />

                                                <Border Grid.Column="1"
                                                        Width="12"
                                                        Height="12"
                                                        Background="{Binding Priority, Converter={StaticResource PriorityToBrushConverter}}"
                                                        CornerRadius="6"
                                                        Margin="5,0,0,0"
                                                        VerticalAlignment="Top" />
                                            </Grid>

                                            <!-- Description -->
                                            <TextBlock Grid.Row="1"
                                                       Text="{Binding Description}"
                                                       TextWrapping="Wrap"
                                                       Margin="0,5,0,0"
                                                       Foreground="{DynamicResource TextSecondaryBrush}" />

                                            <!-- Due Date (if available) -->
                                            <TextBlock Grid.Row="2"
                                                       Text="{Binding DueDate, StringFormat='📅 {0:d MMM}'}"
                                                       Foreground="{DynamicResource TextSecondaryBrush}"
                                                       FontSize="12"
                                                       Margin="0,8,0,0"
                                                       Visibility="{Binding DueDate, Converter={StaticResource NullToVisibilityConverter}}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>

            <!-- In Progress Column -->
            <Border x:Name="InProgressColumn"
                    Grid.Column="1"
                    Background="{StaticResource ColumnNormalBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="8"
                    Margin="5"
                    Padding="10"
                    Tag="{x:Static models:TaskStatus.InProgress}"
                    AllowDrop="True"
                    DragEnter="Column_DragEnter"
                    DragLeave="Column_DragLeave"
                    Drop="Column_Drop">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Column Header -->
                    <StackPanel Grid.Row="0"
                                Orientation="Horizontal"
                                Margin="0,0,0,10">
                        <TextBlock Text="În Progres"
                                   FontSize="18"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource TextBrush}" />
                        <Border Background="{DynamicResource PurpleBrush}"
                                CornerRadius="10"
                                Padding="6,2"
                                Margin="10,0,0,0">
                            <TextBlock Text="{Binding InProgressCount}"
                                       Foreground="White"
                                       FontSize="14"
                                       Margin="5,2" />
                        </Border>
                    </StackPanel>

                    <!-- Tasks List -->
                    <ScrollViewer Grid.Row="1"
                                  VerticalScrollBarVisibility="Auto"
                                  Style="{StaticResource ZenTaskScrollViewerStyle}">
                        <ItemsControl ItemsSource="{Binding InProgressTasks}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{StaticResource KanbanTaskCardStyle}"
                                            PreviewMouseLeftButtonDown="TaskCard_PreviewMouseLeftButtonDown"
                                            MouseMove="TaskCard_MouseMove"
                                            PreviewMouseLeftButtonUp="TaskCard_PreviewMouseLeftButtonUp"
                                            Tag="{Binding Id}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Title with Priority Indicator -->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Grid.Column="0"
                                                           Text="{Binding Title}"
                                                           FontWeight="SemiBold"
                                                           TextWrapping="Wrap" />

                                                <Border Grid.Column="1"
                                                        Width="12"
                                                        Height="12"
                                                        Background="{Binding Priority, Converter={StaticResource PriorityToBrushConverter}}"
                                                        CornerRadius="6"
                                                        Margin="5,0,0,0"
                                                        VerticalAlignment="Top" />
                                            </Grid>

                                            <!-- Description -->
                                            <TextBlock Grid.Row="1"
                                                       Text="{Binding Description}"
                                                       TextWrapping="Wrap"
                                                       Margin="0,5,0,0"
                                                       Foreground="{DynamicResource TextSecondaryBrush}" />

                                            <!-- Due Date (if available) -->
                                            <TextBlock Grid.Row="2"
                                                       Text="{Binding DueDate, StringFormat='📅 {0:d MMM}'}"
                                                       Foreground="{DynamicResource TextSecondaryBrush}"
                                                       FontSize="12"
                                                       Margin="0,8,0,0"
                                                       Visibility="{Binding DueDate, Converter={StaticResource NullToVisibilityConverter}}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>

            <!-- Completed Column -->
            <Border x:Name="CompletedColumn"
                    Grid.Column="2"
                    Background="{StaticResource ColumnNormalBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="8"
                    Margin="5"
                    Padding="10"
                    Tag="{x:Static models:TaskStatus.Completed}"
                    AllowDrop="True"
                    DragEnter="Column_DragEnter"
                    DragLeave="Column_DragLeave"
                    Drop="Column_Drop">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Column Header -->
                    <StackPanel Grid.Row="0"
                                Orientation="Horizontal"
                                Margin="0,0,0,10">
                        <TextBlock Text="Finalizate"
                                   FontSize="18"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource TextBrush}" />
                        <Border Background="{DynamicResource GreenBrush}"
                                CornerRadius="10"
                                Padding="6,2"
                                Margin="10,0,0,0">
                            <TextBlock Text="{Binding CompletedCount}"
                                       Foreground="White"
                                       FontSize="14"
                                       Margin="5,2" />
                        </Border>
                    </StackPanel>

                    <!-- Tasks List -->
                    <ScrollViewer Grid.Row="1"
                                  VerticalScrollBarVisibility="Auto"
                                  Style="{StaticResource ZenTaskScrollViewerStyle}">
                        <ItemsControl ItemsSource="{Binding CompletedTasks}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Style="{StaticResource KanbanTaskCardStyle}"
                                            PreviewMouseLeftButtonDown="TaskCard_PreviewMouseLeftButtonDown"
                                            MouseMove="TaskCard_MouseMove"
                                            PreviewMouseLeftButtonUp="TaskCard_PreviewMouseLeftButtonUp"
                                            Tag="{Binding Id}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Title with Priority Indicator -->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Grid.Column="0"
                                                           Text="{Binding Title}"
                                                           FontWeight="SemiBold"
                                                           TextWrapping="Wrap" />

                                                <Border Grid.Column="1"
                                                        Width="12"
                                                        Height="12"
                                                        Background="{Binding Priority, Converter={StaticResource PriorityToBrushConverter}}"
                                                        CornerRadius="6"
                                                        Margin="5,0,0,0"
                                                        VerticalAlignment="Top" />
                                            </Grid>

                                            <!-- Description -->
                                            <TextBlock Grid.Row="1"
                                                       Text="{Binding Description}"
                                                       TextWrapping="Wrap"
                                                       Margin="0,5,0,0"
                                                       Foreground="{DynamicResource TextSecondaryBrush}" />

                                            <!-- Due Date (if available) -->
                                            <TextBlock Grid.Row="2"
                                                       Text="{Binding DueDate, StringFormat='📅 {0:d MMM}'}"
                                                       Foreground="{DynamicResource TextSecondaryBrush}"
                                                       FontSize="12"
                                                       Margin="0,8,0,0"
                                                       Visibility="{Binding DueDate, Converter={StaticResource NullToVisibilityConverter}}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>

        <!-- Loading Indicator -->
        <!--
        <Grid Grid.Row="0" Grid.RowSpan="2"
              x:Name="LoadingOverlay"
              Background="#80000000"
              Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibility}}">
            <Grid.Triggers>
                <EventTrigger RoutedEvent="UIElement.IsVisibleChanged">
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                        Storyboard.TargetName="LoadingBorder">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames
                        Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                        Storyboard.TargetName="LoadingBorder">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <Border Background="{DynamicResource SurfaceBrush}" 
                    BorderBrush="{DynamicResource BorderBrush}" 
                    BorderThickness="1"
                    x:Name="LoadingBorder"
                    CornerRadius="12" 
                    Padding="25" 
                    MaxWidth="280"
                    MaxHeight="180"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <ScaleTransform ScaleX="0" ScaleY="0"/>
                </Border.RenderTransform>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                    From="0.8" To="1" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation 
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                    From="0.8" To="1" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Se încarcă..." Foreground="{StaticResource TealBrush}" 
                              FontSize="20" FontWeight="SemiBold" HorizontalAlignment="Center"/>

                    <Grid Width="120" Height="120" Margin="0,20,0,0">
                        <Ellipse x:Name="LoadingSpinner" Width="120" Height="120" StrokeThickness="5" 
                                Stroke="{StaticResource TealBrush}" 
                                RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Ellipse.RenderTransform>
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Ellipse.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation 
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                From="0" To="360" 
                                                Duration="0:0:2" 
                                                RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <Ellipse Width="110" Height="110" Fill="{StaticResource SurfaceBrush}"/>
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>-->


        <Grid Grid.Row="0"
              Grid.RowSpan="2"
              x:Name="LoadingGrid"
              Panel.ZIndex="1000"
              Background="#80000000"
              Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibility}}">
            <Border Background="{DynamicResource SurfaceBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="12"
                    Padding="20"
                    Width="250"
                    Height="120"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <ScaleTransform x:Name="LoadingScaleTransform"
                                    ScaleX="1"
                                    ScaleY="1" />
                </Border.RenderTransform>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Simple animation that always works -->
                                <DoubleAnimation Storyboard.TargetName="LoadingScaleTransform"
                                                 Storyboard.TargetProperty="ScaleX"
                                                 From="0.8"
                                                 To="1"
                                                 Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="LoadingScaleTransform"
                                                 Storyboard.TargetProperty="ScaleY"
                                                 From="0.8"
                                                 To="1"
                                                 Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
                <StackPanel>
                    <TextBlock Text="Se încarcă..."
                               Foreground="{StaticResource TealBrush}"
                               FontSize="18"
                               FontWeight="SemiBold"
                               HorizontalAlignment="Center"
                               Margin="0,0,0,12" />
                    <ProgressBar IsIndeterminate="True"
                                 Height="8"
                                 Foreground="{StaticResource TealBrush}" />
                </StackPanel>
            </Border>
        </Grid>

        <!-- Error Message -->
        <Border Grid.Row="0"
                Grid.RowSpan="2"
                Background="#80000000"
                Visibility="{Binding HasError, Converter={StaticResource BoolToVisibility}}">
            <Border Background="#3C1C1C"
                    BorderBrush="{StaticResource ErrorBrush}"
                    BorderThickness="1.5"
                    CornerRadius="12"
                    Padding="25"
                    MaxWidth="500"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <ScaleTransform ScaleX="1"
                                    ScaleY="1" />
                </Border.RenderTransform>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 From="0.8"
                                                 To="1"
                                                 Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut"
                                                  Amplitude="0.5" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 From="0.8"
                                                 To="1"
                                                 Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut"
                                                  Amplitude="0.5" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
                <StackPanel>
                    <TextBlock Text="Error"
                               Foreground="{StaticResource ErrorBrush}"
                               FontSize="22"
                               FontWeight="Bold"
                               HorizontalAlignment="Center" />
                    <TextBlock Text="{Binding ErrorMessage}"
                               Foreground="{StaticResource TextBrush}"
                               TextWrapping="Wrap"
                               Margin="0,15,0,0"
                               FontSize="15"
                               LineHeight="22" />
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                Margin="0,20,0,0">
                        <Button Content="Reload Tasks"
                                Width="130"
                                Height="40"
                                Margin="0,0,15,0"
                                Command="{Binding LoadTasksCommand}"
                                Style="{StaticResource ActionButtonStyle}" />
                        <Button Content="Dismiss"
                                Width="110"
                                Height="40"
                                Command="{Binding ClearErrorCommand}"
                                Style="{StaticResource ActionButtonStyle}"
                                Background="{StaticResource ErrorBrush}" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Border>
    </Grid>
</UserControl>