<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ComboBox de tip ZenTask -->
    <Style x:Key="ZenTaskComboBox" TargetType="ComboBox">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Focusable="false"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="Border" 
                                           Background="{TemplateBinding Background}"
                                           BorderBrush="{TemplateBinding BorderBrush}"
                                           BorderThickness="{TemplateBinding BorderThickness}"
                                           CornerRadius="6">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0" 
                                                             HorizontalAlignment="Left" 
                                                             VerticalAlignment="Center"
                                                             Margin="6,0,0,0"/>
                                            <!-- Săgeată personalizată de dropdown -->
                                            <Path x:Name="Arrow" Grid.Column="1" 
                                                 Fill="{StaticResource TealBrush}" 
                                                 HorizontalAlignment="Center" 
                                                 VerticalAlignment="Center" 
                                                 Data="M 0 0 L 8 8 L 16 0" 
                                                 Margin="0,0,12,0"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TealBrush}"/>
                                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource PurpleBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TealBrush}"/>
                                            <Setter TargetName="Border" Property="BorderThickness" Value="1.5"/>
                                            <Setter TargetName="Arrow" Property="Data" Value="M 0 8 L 8 0 L 16 8"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBrush}"/>
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource TextDisabledBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter"
                                         Content="{TemplateBinding SelectionBoxItem}"
                                         ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                         ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Left"
                                         Margin="18,0,0,0"/>
                        <Popup x:Name="Popup" 
                              Placement="Bottom"
                              IsOpen="{TemplateBinding IsDropDownOpen}"
                              AllowsTransparency="True" 
                              Focusable="False"
                              PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                 SnapsToDevicePixels="True"                
                                 MinWidth="{TemplateBinding ActualWidth}"
                                 MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                       Background="{StaticResource SurfaceBrush}"
                                       BorderBrush="{StaticResource TealBrush}"
                                       BorderThickness="1"
                                       CornerRadius="6"
                                       Margin="0,3,0,0">
                                    <ScrollViewer SnapsToDevicePixels="True" Style="{DynamicResource ZenTaskScrollViewerStyle}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="4,3"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBoxItem de tip ZenTask -->
    <Style x:Key="ZenTaskComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                           Background="Transparent"
                           Padding="12,10">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NavyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource TextDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox de tip ZenTask pentru tema luminoasă -->
    <Style x:Key="ZenTaskComboBoxLight" TargetType="ComboBox" BasedOn="{StaticResource ZenTaskComboBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
    </Style>

    <!-- ComboBoxItem de tip ZenTask pentru tema luminoasă -->
    <Style x:Key="ZenTaskComboBoxItemLight" TargetType="ComboBoxItem" BasedOn="{StaticResource ZenTaskComboBoxItem}">
        <Setter Property="Foreground" Value="#333333"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="#F5F5F5"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#E3F2FD"/>
                <Setter Property="Foreground" Value="#1976D2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox de tip ZenTask cu pictograme pentru categorii -->
    <Style x:Key="ZenTaskCategoryComboBox" TargetType="ComboBox" BasedOn="{StaticResource ZenTaskComboBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border Width="10" Height="10" 
                               Background="{Binding ColorHex, Converter={StaticResource StringToBrushConverter}}" 
                               CornerRadius="5"
                               Margin="0,0,10,0"/>
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>