<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Actualizarea paletei de culori de bază -->
    <Color x:Key="TealColor">#24d4c4</Color>
    <Color x:Key="PurpleColor">#9575fa</Color>
    <Color x:Key="NavyColor">#272b62</Color>
    <Color x:Key="GreenColor">#54b163</Color>
    <Color x:Key="PeachColor">#d4aea6</Color>
    <Color x:Key="DarkBlueColor">#2b306d</Color>
    <Color x:Key="OrangeColor">#ff9800</Color>
    <Color x:Key="PinkColor">#ff4081</Color>
    <Color x:Key="PrimaryColor">#3F51B5</Color>
    <Color x:Key="SecondaryColor">#FF4081</Color>
    <Color x:Key="BackgroundColor">#F5F5F5</Color>
    <!-- UI Text Defaults (will be overridden by theme) -->
    <Color x:Key="FilterLabelColor">#ffffff</Color>
    <Color x:Key="SectionHeaderColor">#212121</Color>
    <Color x:Key="ControlTextColor">#212121</Color>

    <SolidColorBrush x:Key="FilterLabelBrush" Color="{DynamicResource FilterLabelColor}"/>
    <SolidColorBrush x:Key="SectionHeaderBrush" Color="{DynamicResource SectionHeaderColor}"/>
    <SolidColorBrush x:Key="ControlTextBrush" Color="{DynamicResource ControlTextColor}"/>

    <!-- Main Background and Surface Colors -->
    <Color x:Key="BackgroundDarkColor">#1a1d24</Color>
    <Color x:Key="SurfaceDarkColor">#272b38</Color>
    <Color x:Key="InputBackgroundColor">#1d2025</Color>

    <!-- Border & Divider Colors -->
    <Color x:Key="BorderColor">#3e3e3e</Color>
    <Color x:Key="DividerColor">#35363a</Color>

    <!-- Text Colors -->
    <Color x:Key="TextPrimaryColor">#ffffff</Color>
    <Color x:Key="TextSecondaryColor">#c7c7c7</Color>
    <Color x:Key="TextDisabledColor">#808080</Color>

    <!-- State Colors -->
    <Color x:Key="ErrorColor">#ff6b6b</Color>
    <Color x:Key="WarningColor">#ffb84d</Color>
    <Color x:Key="SuccessColor">#4cd97b</Color>
    <Color x:Key="InfoColor">#5bc0de</Color>

    <!-- Brushes -->
    <!-- Primary Brand Colors -->
    <SolidColorBrush x:Key="TealBrush" Color="{StaticResource TealColor}" />
    <SolidColorBrush x:Key="PurpleBrush" Color="{StaticResource PurpleColor}" />
    <SolidColorBrush x:Key="NavyBrush" Color="{StaticResource NavyColor}" />
    <SolidColorBrush x:Key="GreenBrush" Color="{StaticResource GreenColor}" />
    <SolidColorBrush x:Key="PeachBrush" Color="{StaticResource PeachColor}" />
    <SolidColorBrush x:Key="DarkBlueBrush" Color="{StaticResource DarkBlueColor}" />
    <SolidColorBrush x:Key="OrangeBrush" Color="{StaticResource OrangeColor}" />
    <SolidColorBrush x:Key="PinkBrush" Color="{StaticResource PinkColor}" />

    <!-- Main UI Brushes -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundDarkColor}" />
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceDarkColor}" />
    <SolidColorBrush x:Key="CardBrush" Color="{StaticResource SurfaceDarkColor}" />
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource InputBackgroundColor}" />
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />
    <SolidColorBrush x:Key="DividerBrush" Color="{StaticResource DividerColor}" />

    <!-- Text Brushes -->
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextPrimaryColor}" />
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}" />
    <SolidColorBrush x:Key="TextDisabledBrush" Color="{StaticResource TextDisabledColor}" />
    <SolidColorBrush x:Key="SubtleBrush" Color="{StaticResource TextSecondaryColor}" />

    <!-- State Brushes -->
    <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}" />
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}" />
    <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}" />
    <SolidColorBrush x:Key="InfoBrush" Color="{StaticResource InfoColor}" />

    <!-- Accent Brushes (for priority highlighting etc.) -->
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource TealColor}" />
    <SolidColorBrush x:Key="AccentHoverBrush" Color="{StaticResource GreenColor}" />
    <SolidColorBrush x:Key="AccentPressedBrush" Color="{StaticResource PurpleColor}" />
    <SolidColorBrush x:Key="BackgroundHoverBrush" Color="#2a2e38" />
    <SolidColorBrush x:Key="DisabledBrush" Color="#495057" />
    <SolidColorBrush x:Key="DisabledTextBrush" Color="#adb5bd" />


    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}"/>

    <!-- Priority Color Brushes -->
    <SolidColorBrush x:Key="PriorityLowBrush" Color="{StaticResource GreenColor}" />
    <SolidColorBrush x:Key="PriorityMediumBrush" Color="{StaticResource TealColor}" />
    <SolidColorBrush x:Key="PriorityHighBrush" Color="{StaticResource PurpleColor}" />
    <SolidColorBrush x:Key="PriorityUrgentBrush" Color="{StaticResource ErrorColor}" />

    <!-- Status Color Brushes -->
    <SolidColorBrush x:Key="StatusToDoBrush" Color="{StaticResource OrangeColor}" />
    <SolidColorBrush x:Key="StatusInProgressBrush" Color="{StaticResource PurpleColor}" />
    <SolidColorBrush x:Key="StatusCompletedBrush" Color="{StaticResource GreenColor}" />

    <!-- Category Default Colors (These can be overridden when user selects category colors) -->
    <SolidColorBrush x:Key="CategoryWorkBrush" Color="{StaticResource PinkColor}" />
    <SolidColorBrush x:Key="CategoryPersonalBrush" Color="{StaticResource GreenColor}" />
    <SolidColorBrush x:Key="CategoryStudyBrush" Color="{StaticResource TealColor}" />
    <SolidColorBrush x:Key="CategoryHealthBrush" Color="{StaticResource PurpleColor}" />
    <SolidColorBrush x:Key="CategoryFinanceBrush" Color="{StaticResource OrangeColor}" />
    <SolidColorBrush x:Key="CategoryDefaultBrush" Color="{StaticResource NavyColor}" />

    <!-- Themed Controls - Basic properties to be used across app -->
    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,15" />
    </Style>

    <Style x:Key="SubheaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,10" />
    </Style>

    <Style x:Key="BodyTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
    </Style>

    <!-- Base Control Styles -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Padding" Value="15,8" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style x:Key="BaseTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,5" />
    </Style>

    <!-- CheckBox cu stil consistent -->
    <Style x:Key="ZenTaskCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                               Background="{StaticResource InputBackgroundBrush}" 
                               BorderBrush="{StaticResource BorderBrush}" 
                               BorderThickness="1.5"
                               Width="20" Height="20" 
                               CornerRadius="4" 
                               Margin="0,0,8,0" 
                               VerticalAlignment="Center">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" 
                                     Data="M 4,10 L 8,14 L 14,4" 
                                     Stroke="{StaticResource TealBrush}" 
                                     StrokeThickness="2" 
                                     Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                         ContentTemplate="{TemplateBinding ContentTemplate}" 
                                         Content="{TemplateBinding Content}" 
                                         Grid.Column="1" 
                                         Focusable="False" 
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         Margin="{TemplateBinding Padding}" 
                                         RecognizesAccessKey="True" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource NavyBrush}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource TealBrush}"/>
                            <Setter Property="Visibility" TargetName="optionMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource TealBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource PurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RadioButton cu stil consistent -->
    <Style x:Key="ZenTaskRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                               Background="{StaticResource InputBackgroundBrush}" 
                               BorderBrush="{StaticResource BorderBrush}" 
                               BorderThickness="1.5"
                               Width="20" Height="20" 
                               CornerRadius="10" 
                               Margin="0,0,8,0" 
                               VerticalAlignment="Center">
                            <Ellipse x:Name="optionMark" 
                                  Fill="{StaticResource TealBrush}" 
                                  Width="10" Height="10" 
                                  Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                         ContentTemplate="{TemplateBinding ContentTemplate}" 
                                         Content="{TemplateBinding Content}" 
                                         Grid.Column="1" 
                                         Focusable="False" 
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         Margin="{TemplateBinding Padding}" 
                                         RecognizesAccessKey="True" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource NavyBrush}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource TealBrush}"/>
                            <Setter Property="Visibility" TargetName="optionMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource TealBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource PurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#303F9F"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#1A237E"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#BDBDBD"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F5F5F5"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TextBox Styles-->
    <Style x:Key="DefaultTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--PasswordBox Style-->
    <Style x:Key="DefaultPasswordBox" TargetType="PasswordBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DropShadowEffect x:Key="DefaultShadowEffect" 
                 Color="#000000"
                 Direction="315"
                 ShadowDepth="5"
                 BlurRadius="10"
                 Opacity="0.3"/>
</ResourceDictionary>