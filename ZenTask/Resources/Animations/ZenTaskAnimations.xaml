<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Duration Constants -->
    <Duration x:Key="ShortDuration">0:0:0.15</Duration>
    <Duration x:Key="MediumDuration">0:0:0.25</Duration>
    <Duration x:Key="LongDuration">0:0:0.5</Duration>

    <!-- Easing Functions -->
    <PowerEase x:Key="EaseOut" EasingMode="EaseOut" Power="3" />
    <PowerEase x:Key="EaseIn" EasingMode="EaseIn" Power="3" />
    <PowerEase x:Key="EaseInOut" EasingMode="EaseInOut" Power="3" />
    <ElasticEase x:Key="ElasticEaseOut" EasingMode="EaseOut" Oscillations="1" Springiness="3" />
    <BackEase x:Key="BackEaseOut" EasingMode="EaseOut" Amplitude="0.5" />

    <!-- Fade In Animation -->
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0" To="1"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
    </Storyboard>

    <!-- Fade Out Animation -->
    <Storyboard x:Key="FadeOutAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="1" To="0"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseIn}" />
    </Storyboard>

    <!-- Slide In From Right Animation -->
    <Storyboard x:Key="SlideInFromRightAnimation">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="50,0,0,0" To="0"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0" To="1"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
    </Storyboard>

    <!-- Slide Out To Right Animation -->
    <Storyboard x:Key="SlideOutToRightAnimation">
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="0" To="50,0,0,0"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseIn}" />
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="1" To="0"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseIn}" />
    </Storyboard>

    <!-- Scale In Animation (Grow) -->
    <Storyboard x:Key="ScaleInAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="0.8" To="1"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="0.8" To="1"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0" To="1"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
    </Storyboard>

    <!-- Button Click Animation -->
    <Storyboard x:Key="ButtonClickAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1" To="0.95"
            Duration="0:0:0.1"
            AutoReverse="True"
            EasingFunction="{StaticResource EaseInOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1" To="0.95"
            Duration="0:0:0.1"
            AutoReverse="True"
            EasingFunction="{StaticResource EaseInOut}" />
    </Storyboard>

    <!-- Task Completion Animation -->
    <Storyboard x:Key="TaskCompletedAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1" To="1.05"
            Duration="0:0:0.15"
            AutoReverse="True"
            EasingFunction="{StaticResource ElasticEaseOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1" To="1.05"
            Duration="0:0:0.15"
            AutoReverse="True"
            EasingFunction="{StaticResource ElasticEaseOut}" />
        <ColorAnimation
            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
            To="#54b163"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
    </Storyboard>

    <!-- Tab Switch Animation -->
    <Storyboard x:Key="TabSwitchAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0" To="1"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource EaseOut}" />
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="0,20,0,0" To="0"
            Duration="{StaticResource MediumDuration}"
            EasingFunction="{StaticResource BackEaseOut}" />
    </Storyboard>

    <!-- Popup Animation -->
    <Storyboard x:Key="PopupOpenAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="0.8" To="1"
            Duration="{StaticResource ShortDuration}"
            EasingFunction="{StaticResource BackEaseOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="0.8" To="1"
            Duration="{StaticResource ShortDuration}"
            EasingFunction="{StaticResource BackEaseOut}" />
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0" To="1"
            Duration="{StaticResource ShortDuration}"
            EasingFunction="{StaticResource EaseOut}" />
    </Storyboard>

    <!-- Loading Spinner Animation -->
    <Storyboard x:Key="SpinnerAnimation" RepeatBehavior="Forever">
        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
            From="0" To="360"
            Duration="0:0:1.5"
            RepeatBehavior="Forever"
            EasingFunction="{StaticResource EaseInOut}" />
    </Storyboard>
    <!-- Animated Button Style -->
    <Style x:Key="AnimatedButton" TargetType="Button">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard Storyboard="{StaticResource ButtonClickAnimation}" />
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GreenBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Animated Element Style Base -->
    <Style x:Key="FadeInElement" TargetType="FrameworkElement">
        <Setter Property="Opacity" Value="0" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="Opacity"
                            From="0" To="1"
                            Duration="{StaticResource MediumDuration}"
                            EasingFunction="{StaticResource EaseOut}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Scale Transform Group for use with ScaleIn animations -->
    <TransformGroup x:Key="ScaleTransformGroup">
        <ScaleTransform ScaleX="1" ScaleY="1" />
    </TransformGroup>

    <!-- Rotate Transform for use with spinner animations -->
    <RotateTransform x:Key="RotateTransform" Angle="0" />

    <Storyboard x:Key="ThemeTransitionAnimation">
        <DoubleAnimation 
            Storyboard.TargetName="ThemeTransitionOverlay" 
            Storyboard.TargetProperty="Opacity"
            From="0" To="0.7" Duration="0:0:0.3" 
            AutoReverse="True" 
            FillBehavior="Stop">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

</ResourceDictionary>