<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Duration Constants  -->
    <Duration x:Key="ShortDuration">0:0:0.15</Duration>
    <Duration x:Key="MediumDuration">0:0:0.25</Duration>
    <Duration x:Key="LongDuration">0:0:0.5</Duration>

    <!--  Easing Functions  -->
    <PowerEase
        x:Key="EaseOut"
        EasingMode="EaseOut"
        Power="3" />
    <PowerEase
        x:Key="EaseIn"
        EasingMode="EaseIn"
        Power="3" />
    <PowerEase
        x:Key="EaseInOut"
        EasingMode="EaseInOut"
        Power="3" />
    <ElasticEase
        x:Key="ElasticEaseOut"
        EasingMode="EaseOut"
        Oscillations="1"
        Springiness="3" />
    <BackEase
        x:Key="BackEaseOut"
        Amplitude="0.5"
        EasingMode="EaseOut" />

    <!--  Fade In Animation  -->
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Fade Out Animation  -->
    <Storyboard x:Key="FadeOutAnimation">
        <DoubleAnimation
            EasingFunction="{StaticResource EaseIn}"
            Storyboard.TargetProperty="Opacity"
            From="1"
            To="0"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Slide In From Right Animation  -->
    <Storyboard x:Key="SlideInFromRightAnimation">
        <ThicknessAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="Margin"
            From="50,0,0,0"
            To="0"
            Duration="{StaticResource MediumDuration}" />
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Slide Out To Right Animation  -->
    <Storyboard x:Key="SlideOutToRightAnimation">
        <ThicknessAnimation
            EasingFunction="{StaticResource EaseIn}"
            Storyboard.TargetProperty="Margin"
            From="0"
            To="50,0,0,0"
            Duration="{StaticResource MediumDuration}" />
        <DoubleAnimation
            EasingFunction="{StaticResource EaseIn}"
            Storyboard.TargetProperty="Opacity"
            From="1"
            To="0"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Scale In Animation (Grow)  -->
    <Storyboard x:Key="ScaleInAnimation">
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="0.8"
            To="1"
            Duration="{StaticResource MediumDuration}" />
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="0.8"
            To="1"
            Duration="{StaticResource MediumDuration}" />
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Button Click Animation  -->
    <Storyboard x:Key="ButtonClickAnimation">
        <DoubleAnimation
            AutoReverse="True"
            EasingFunction="{StaticResource EaseInOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="0.95"
            Duration="0:0:0.1" />
        <DoubleAnimation
            AutoReverse="True"
            EasingFunction="{StaticResource EaseInOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="0.95"
            Duration="0:0:0.1" />
    </Storyboard>

    <!--  Task Completion Animation  -->
    <Storyboard x:Key="TaskCompletedAnimation">
        <DoubleAnimation
            AutoReverse="True"
            EasingFunction="{StaticResource ElasticEaseOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="1.05"
            Duration="0:0:0.15" />
        <DoubleAnimation
            AutoReverse="True"
            EasingFunction="{StaticResource ElasticEaseOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="1.05"
            Duration="0:0:0.15" />
        <ColorAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
            To="#54b163"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Tab Switch Animation  -->
    <Storyboard x:Key="TabSwitchAnimation">
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="{StaticResource MediumDuration}" />
        <ThicknessAnimation
            EasingFunction="{StaticResource BackEaseOut}"
            Storyboard.TargetProperty="Margin"
            From="0,20,0,0"
            To="0"
            Duration="{StaticResource MediumDuration}" />
    </Storyboard>

    <!--  Popup Animation  -->
    <Storyboard x:Key="PopupOpenAnimation">
        <DoubleAnimation
            EasingFunction="{StaticResource BackEaseOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="0.8"
            To="1"
            Duration="{StaticResource ShortDuration}" />
        <DoubleAnimation
            EasingFunction="{StaticResource BackEaseOut}"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="0.8"
            To="1"
            Duration="{StaticResource ShortDuration}" />
        <DoubleAnimation
            EasingFunction="{StaticResource EaseOut}"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="{StaticResource ShortDuration}" />
    </Storyboard>

    <!--  Loading Spinner Animation  -->
    <Storyboard x:Key="SpinnerAnimation" RepeatBehavior="Forever">
        <DoubleAnimation
            EasingFunction="{StaticResource EaseInOut}"
            RepeatBehavior="Forever"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
            From="0"
            To="360"
            Duration="0:0:1.5" />
    </Storyboard>
    <!--  Animated Button Style  -->
    <Style x:Key="AnimatedButton" TargetType="Button">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard Storyboard="{StaticResource ButtonClickAnimation}" />
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GreenBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PurpleBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Animated Element Style Base  -->
    <Style x:Key="FadeInElement" TargetType="FrameworkElement">
        <Setter Property="Opacity" Value="0" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            EasingFunction="{StaticResource EaseOut}"
                            Storyboard.TargetProperty="Opacity"
                            From="0"
                            To="1"
                            Duration="{StaticResource MediumDuration}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--  Scale Transform Group for use with ScaleIn animations  -->
    <TransformGroup x:Key="ScaleTransformGroup">
        <ScaleTransform ScaleX="1" ScaleY="1" />
    </TransformGroup>

    <!--  Rotate Transform for use with spinner animations  -->
    <RotateTransform x:Key="RotateTransform" Angle="0" />

    <Storyboard x:Key="ThemeTransitionAnimation">
        <DoubleAnimation
            AutoReverse="True"
            FillBehavior="Stop"
            Storyboard.TargetName="ThemeTransitionOverlay"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="0.7"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="LoginToMainAnimation">
        <!--  Fade out login  -->
        <DoubleAnimation
            Storyboard.TargetName="LoginContent"
            Storyboard.TargetProperty="Opacity"
            From="1"
            To="0"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  Scale down login  -->
        <DoubleAnimation
            Storyboard.TargetName="LoginContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="0.9"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetName="LoginContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="0.9"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  After login fades out, begin fading in main content  -->
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LoginContent" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainContent" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}" />
        </ObjectAnimationUsingKeyFrames>

        <!--  Scale up and fade in main content  -->
        <DoubleAnimation
            BeginTime="0:0:0.3"
            Storyboard.TargetName="MainContent"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            BeginTime="0:0:0.3"
            Storyboard.TargetName="MainContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1.05"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            BeginTime="0:0:0.3"
            Storyboard.TargetName="MainContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1.05"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!--  Transition from Main Content to Login Animation  -->
    <Storyboard x:Key="MainToLoginAnimation">
        <!--  Fade out main content  -->
        <DoubleAnimation
            Storyboard.TargetName="MainContent"
            Storyboard.TargetProperty="Opacity"
            From="1"
            To="0"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  Scale main content  -->
        <DoubleAnimation
            Storyboard.TargetName="MainContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="1.05"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetName="MainContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="1.05"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  After main content fades out, begin fading in login  -->
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainContent" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LoginContent" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}" />
        </ObjectAnimationUsingKeyFrames>

        <!--  Scale up and fade in login  -->
        <DoubleAnimation
            BeginTime="0:0:0.3"
            Storyboard.TargetName="LoginContent"
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            BeginTime="0:0:0.3"
            Storyboard.TargetName="LoginContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="0.9"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            BeginTime="0:0:0.3"
            Storyboard.TargetName="LoginContent"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="0.9"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <Storyboard x:Key="TaskCardEnterAnimation">
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="0"
            To="1"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            From="0,20,5,5"
            To="0,5,5,5"
            Duration="0:0:0.4">
            <ThicknessAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
    </Storyboard>

    <Storyboard x:Key="TaskStatusTransitionAnimation">
        <!--  Scale down and fade out  -->
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            From="1"
            To="0.3"
            Duration="0:0:0.2">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="0.95"
            Duration="0:0:0.2">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="0.95"
            Duration="0:0:0.2">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseIn" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  Scale up and fade in with the new status  -->
        <DoubleAnimation
            BeginTime="0:0:0.2"
            Storyboard.TargetProperty="Opacity"
            From="0.3"
            To="1"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" Power="2" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
            BeginTime="0:0:0.2"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="0.95"
            To="1"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
            BeginTime="0:0:0.2"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="0.95"
            To="1"
            Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <BackEase Amplitude="0.3" EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!--  Animation specific for task completion  -->
    <Storyboard x:Key="TaskCompleteAnimation">
        <!--  Pulse effect  -->
        <DoubleAnimation
            AutoReverse="True"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="1.05"
            Duration="0:0:0.15">
            <DoubleAnimation.EasingFunction>
                <ElasticEase
                    EasingMode="EaseOut"
                    Oscillations="1"
                    Springiness="3" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
            AutoReverse="True"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="1.05"
            Duration="0:0:0.15">
            <DoubleAnimation.EasingFunction>
                <ElasticEase
                    EasingMode="EaseOut"
                    Oscillations="1"
                    Springiness="3" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  Color transition  -->
        <ColorAnimation
            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
            To="#54b163"
            Duration="0:0:0.25" />

        <!--  Add strikethrough to text  -->
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextDecorations">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static TextDecorations.Strikethrough}" />
        </ObjectAnimationUsingKeyFrames>

        <!--  Slide out to the right and fade slightly  -->
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            To="0,5,25,5"
            Duration="0:0:0.4">
            <ThicknessAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" />
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>

        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            To="0.8"
            Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!--  Animation for starting a task (To Do -> In Progress)  -->
    <Storyboard x:Key="TaskStartAnimation">
        <!--  Quick pulse effect  -->
        <DoubleAnimation
            AutoReverse="True"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
            From="1"
            To="1.03"
            Duration="0:0:0.12">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <DoubleAnimation
            AutoReverse="True"
            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
            From="1"
            To="1.03"
            Duration="0:0:0.12">
            <DoubleAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!--  Color highlight transition  -->
        <ColorAnimation
            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
            To="#9575fa"
            Duration="0:0:0.25" />
    </Storyboard>

    <!--  Skeleton loading animation for task cards  -->
    <Storyboard x:Key="SkeletonLoadingAnimation" RepeatBehavior="Forever">
        <DoubleAnimation
            AutoReverse="True"
            Storyboard.TargetProperty="Opacity"
            From="0.4"
            To="0.7"
            Duration="0:0:0.8" />
    </Storyboard>

    <!--  Task card skeleton style  -->
    <Style x:Key="SkeletonCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Margin" Value="0,5,5,10" />
        <Setter Property="Height" Value="180" />
        <Setter Property="Padding" Value="18" />
        <Setter Property="Opacity" Value="0.5" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Border.Loaded">
                <BeginStoryboard Storyboard="{StaticResource SkeletonLoadingAnimation}" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--  Skeleton block style (for text placeholders)  -->
    <Style x:Key="SkeletonBlockStyle" TargetType="Border">
        <Setter Property="Background" Value="#3F3F3F" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Height" Value="16" />
    </Style>

    <!--  Short skeleton block style (for text placeholders)  -->
    <Style
        x:Key="SkeletonBlockShortStyle"
        BasedOn="{StaticResource SkeletonBlockStyle}"
        TargetType="Border">
        <Setter Property="Width" Value="100" />
    </Style>

    <!--  Medium skeleton block style (for text placeholders)  -->
    <Style
        x:Key="SkeletonBlockMediumStyle"
        BasedOn="{StaticResource SkeletonBlockStyle}"
        TargetType="Border">
        <Setter Property="Width" Value="150" />
    </Style>

    <!--<Storyboard x:Key="TaskCompletedAnimation">
        <ColorAnimation
            Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
            To="#54b163"
            Duration="0:0:0.3" />
        <DoubleAnimation
            Storyboard.TargetProperty="Opacity"
            To="0.7"
            Duration="0:0:0.6" />
        <ThicknessAnimation
            Storyboard.TargetProperty="Margin"
            To="0,5,25,5"
            Duration="0:0:0.4">
            <ThicknessAnimation.EasingFunction>
                <PowerEase EasingMode="EaseOut" />
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
    </Storyboard>-->

</ResourceDictionary>